[H[JREBOL/Core 2.7.8.4.3 (6-Jan-2011)
Copyright 2011 REBOL Technologies
REBOL is a Trademark of REBOL Technologies
All rights reserved.

Finger protocol loaded
Whois protocol loaded
Daytime protocol loaded
SMTP protocol loaded
ESMTP protocol loaded
POP protocol loaded
IMAP protocol loaded
HTTP protocol loaded
FTP protocol loaded
NNTP protocol loaded
Script: "Red command-line front-end" (none)
Script: "Encap virtual filesystem" (21-Sep-2009)

-=== Red Compiler 0.6.4 ===- 

Compiling /home/nathan/repos/red/opTest.red ...
...using libRedRT built on 9-Apr-2019/22:20:32+1:00

####################
looping over pc
pc: [
    system/script/args: #system [
        #either type = 'exe [stack/push get-cmdline-args] [none/push]
    ] extract-boot-args
]
expr: [
    system/script/args: #system [
        #either type = 'exe [stack/push get-cmdline-args] [none/push]
    ] extract-boot-args
]
in comp-expression
pc in check-infix-operators:
in comp-expression
pc in check-infix-operators:
expr: [
    system/script/args: #system [
        #either type = 'exe [stack/push get-cmdline-args] [none/push]
    ] extract-boot-args
]
 

####################
looping over pc
pc: [extract-boot-args]
expr: [extract-boot-args]
in comp-expression
pc in check-infix-operators:
expr: [extract-boot-args]
 
code: [
    a: context [b: make op! function [x y] [x + y]] 
    probe 4 a/b 5
]
##################################################################compiling user code

####################
looping over pc
pc: [
    a: context [b: make op! function [x y] [x + y]] 
    probe 4 a/b 5
]
expr: [
    a: context [b: make op! function [x y] [x + y]] 
    probe 4 a/b 5
]
in comp-expression
pc in check-infix-operators:

####################
looping over pc
pc: [b: make op! function [x y] [x + y]]
expr: [b: make op! function [x y] [x + y]]
in comp-expression
pc in check-infix-operators:
in comp-expression
pc in check-infix-operators:
in comp-expression
pc in check-infix-operators:
in comp-expression
pc in check-infix-operators:
expr: [b: make op! function [x y] [x + y]]
 
expr: [
    a: context [b: make op! function [x y] [x + y]] 
    probe 4 a/b 5
]
 

####################
looping over pc
pc: [
    probe 4 a/b 5
]
expr: [
    probe 4 a/b 5
]
in comp-expression
pc in check-infix-operators:
in comp-expression
pc in check-infix-operators:
######################################################################
POS IS:
[a/b 5]
a/b
 
true
true
[op! 2 [x y] none]
specs: [op! 2 [x y] none]
true
true
######################################################################
POS IS:
[a/b 5]
a/b
 
true
true
[op! 2 [x y] none]
specs: [op! 2 [x y] none]
true
true
[5]
a/b
*** Red Compiler Internal Error: Script Error : emit-open-frame expected name argument of type: word 
*** Where: check-infix-operators 
*** Near:  [emit-open-frame op 
pos: skip pos
] 

