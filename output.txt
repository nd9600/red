[H[JREBOL/Core 2.7.8.4.3 (6-Jan-2011)
Copyright 2011 REBOL Technologies
REBOL is a Trademark of REBOL Technologies
All rights reserved.

Finger protocol loaded
Whois protocol loaded
Daytime protocol loaded
SMTP protocol loaded
ESMTP protocol loaded
POP protocol loaded
IMAP protocol loaded
HTTP protocol loaded
FTP protocol loaded
NNTP protocol loaded
Script: "Red command-line front-end" (none)
Script: "Encap virtual filesystem" (21-Sep-2009)

-=== Red Compiler 0.6.4 ===- 

Compiling /home/nathan/repos/nd9600/myred/objOpTest.red ...
...using libRedRT built on 10-Apr-2019/10:44:15+1:00
in comp-expression
pc in check-infix-operators:
in comp-path
[
    system/script/args: #system [
        #either type = 'exe [stack/push get-cmdline-args] [none/push]
    ] extract-boot-args
]
system/script/args:
path: system/script/args:
value: system
path: script/args:
value: script
path: args:
value: args
calling obj-func-path? with
system/script/args:
after calling calling obj-func-path?
path: system/script/args
fpath: objects/system/script
found?: make object! [
    title: none
    header: none
    parent: none
    path: none
    args: none
]
fpath: objects/system/script
base: objects
obj?: make object! [
    title: none
    header: none
    parent: none
    path: none
    args: none
]
dispatch-ctx-keywords
#system
in comp-expression
pc in check-infix-operators:
after if set?
path: system/script/args:
fpath: objects/system/script
ctx: ctx255
index: 4
true-blk: [[word/set-in-ctx ctx255 4]]
emitting
in emit-path
path: system/script/args:
[_context/get ~system]
path: script/args:
[as cell! ~script]
path: args:
[as cell! ~args]
words: [_context/get ~system as cell! ~script as cell! ~args]
 
in comp-expression
pc in check-infix-operators:
dispatch-ctx-keywords
extract-boot-args
 
##################################################################compiling user code
in comp-expression
pc in check-infix-operators:
dispatch-ctx-keywords
context
in comp-expression
pc in check-infix-operators:
dispatch-ctx-keywords
make
in comp-expression
pc in check-infix-operators:
dispatch-ctx-keywords
make
FETCH-FUNCTIONS2
[op! function [x y] [x + y]]
[b: make op! function [x y] [x + y]]
APPENDING FUNCTION4
[b [op! 2 [x y] none]]
dispatch-ctx-keywords
make
in comp-expression
pc in check-infix-operators:
dispatch-ctx-keywords
op!
in comp-expression
pc in check-infix-operators:
dispatch-ctx-keywords
function
add-function in comp-func
APPENDING FUNCTION3
[<anon363> [function! 2 [x y] none]]
APPENDING FUNCTION6
ctx361
 
 
"output2d:"
output: [
    stack/mark-native ~set 
    word/push ~datatype! 
    datatype/push TYPE_DATATYPE 
    word/set 
    stack/unwind 
    stack/reset 
    #script %/home/nathan/repos/nd9600/myred/objOpTest.red 
    #either type = 'exe [stack/push get-cmdline-args] [none/push] 
    #script %/home/nathan/repos/nd9600/myred/objOpTest.red 
    either all [
        object/unchanged? ~system 211 
        object/unchanged2? ctx210 12 256
    ] [word/set-in-ctx ctx255 4] [
        stack/mark-func ~eval-set-path exec/ctx175 
        if stack/arguments > stack/bottom [stack/push stack/arguments - 1] 
        object/path-parent/header: TYPE_NONE 
        set-path* eval-path _context/get ~system as cell! ~script as cell! ~args 
        stack/unwind
    ] 
    stack/reset ------------| {system/script/args: #system [ #either type = 'exe ...} 
    stack/mark-func ~extract-boot-args exec/ctx183 
    f_extract-boot-args 
    stack/unwind ------------| "extract-boot-args" #user-code ------------| "a: context [b]" 
    stack/mark-native ~body 
    stack/mark-native ~set 
    stack/mark-native ~make 
    word/get ~op! 
    _function/push get-root 2 get-root 3 ctx364 as integer! :f_<anon363> ctx361 
    actions/make* 
    stack/unwind 
    word/set-in ctx361 0 
    stack/unwind ------------| "b: make op! function [x y] [x + y]" 
    stack/revert 
    stack/mark-native ~set 
    word/push ~a 
    object/init-push ctx361 362 false 
    word/set 
    stack/unwind ------------| "a: context [b: make op! function [x y] [x + y]]"
]
in comp-expression
pc in check-infix-operators:
in comp-expression
dispatch-ctx-keywords
x
in comp-expression
dispatch-ctx-keywords
y
 
[------------| "a: context [b]" 
    stack/mark-native ~body 
    stack/mark-native ~set 
    stack/mark-native ~make 
    word/get ~op! 
    _function/push get-root 2 get-root 3 ctx364 as integer! :f_<anon363> ctx361 
    actions/make* 
    stack/unwind 
    word/set-in ctx361 0 
    stack/unwind ------------| "b: make op! function [x y] [x + y]" 
    stack/revert 
    stack/mark-native ~set 
    word/push ~a 
    object/init-push ctx361 362 false 
    word/set 
    stack/unwind ------------| "a: context [b: make op! function [x y] [x + y]]" #user-code
]
...compilation time : 20 ms

Target: Linux 

Compiling to native code...
Script: "Red/System ELF format emitter" (none)
...compilation time : 1127 ms
...linking time     : 154 ms
...output file size : 104784 bytes
...output file      : /home/nathan/repos/nd9600/myred/objOpTest 


